##only support 3 level config info
#config fo agent
motan-agent:
  port: 9981 # agent提供正向代理的端口.不同语言client通过此端口发出调用请求
  mport: 8002 # agent 管理端口，用来查看agent自身运行状况以及通过此端口完成对agent的动态管理。
  log_dir: "./agentlogs" # agent日志保存目录
  registry: "zk-registry" # agent注册自身信息时使用的注册中心，需要与motan-registry部分配置的注册中心id一致
  application: "zha-test" # agent业务方标识。一般以业务线为维度，motan的指令系统下发的流控与降级等指令会按application维度下发并执行。

#config of registries
motan-registry: # motan-registry部分与client、server端的含义一致
  direct-registry: # registry id
    protocol: direct   # registry type. will get instance from extFactory.
    host: 127.0.0.1 # direct server ip in single ip. if has host, address will disable.
    port: 8100 #direct server port,正向代理端口
    # address: "10.210.21.1:8002,10.210.21.2:8002" # direct server in multi ip

#   zk-registry:
#     protocol: zookeeper
#     host: 10.210.235.157
#     port: 2181
#     registrySessionTimeout: 10000
#     requestTimeout: 5000

#conf of basic refers
motan-basicRefer:
  mybasicRefer: # basic refer id
    group: motan-demo-rpc # group name
    protocol: motan2 # rpc的调用协议
    registry: "direct-registry" # registry id
    requestTimeout: 1000
    haStrategy: failover
    loadbalance: roundrobin
    serialization: simple
    filter: "accessLog, myfilter" # 调用中的filter配置，多个filter以逗号分隔，对应的filter名必须已经在启动时注册到ext扩展工厂中。
    retries: 0

#conf of refers
motan-refer:
  mytest-motan2:
    path: com.weibo.motan2.test.Motan2TestService # e.g. service name for subscribe
    registry: direct-registry
    serialization: simple # 使用的序列化协议
    basicRefer: mybasicRefer # basic refer id

  mytest-demo:
    path: com.weibo.motan.demo.service.MotanDemoService # e.g. service name for subscribe
    registry: direct-registry
    basicRefer: mybasicRefer # basic refer id

  #zha测试
#  httptest-zha: #clientid，创建client时使用，与server端配置对应
#    path: com.weibo.motan.demo.service.HttpService
#    registry: direct-registry
#    serialization: simple # 使用的序列化协议
#    basicRefer: mybasicRefer

  motantest-zha0: #clientid，创建client时使用，与server端配置对应
    path: com.weibo.motan.demo.service.MotanService
    registry: direct-registry
    serialization: simple # 使用的序列化协议
    basicRefer: mybasicRefer

  motantest-zha1: #clientid，创建client时使用，与server端配置对应
    path: com.weibo.motan.demo.service.MotanService
    registry: direct-registry
    serialization: simple # 使用的序列化协议
    basicRefer: mybasicRefer

#zha测试
#config fo server
motan-server:
  mport: 8002 # agent manage port
  log_dir: "./serverlogs"
  application: "zha-test" # server identify.

motan-basicService:
  mybasicRefer: # basic refer id
    group: motan-demo-rpc
    protocol: motan2
    mingzSize: 5000
    registry: "direct-registry"
    filter: "accessLog" # filter registed in extFactory
    serialization: simple
    nodeType: server

#zha测试
motan-service:
  motantest-zha0: #clientid，创建client时使用，与client端配置对应
    path: com.weibo.motan.demo.service.MotanService0
    registry: "direct-registry"
    provider: motanProvider #使用provider在此注册
    requestTimeout: 2000
    basicRefer: mybasicRefer
    export: "motan2:8104" #对外提供服务的端口。不同service可以使用相同export端口，前提条件为协议与序列化等配置必须相同。
  motantest-zha1: #clientid，创建client时使用，与client端配置对应
    path: com.weibo.motan.demo.service.MotanService1
    registry: "direct-registry"
    provider: motanProvider #使用provider在此注册
    requestTimeout: 2000
    basicRefer: mybasicRefer
    export: "motan2:8104" #对外提供服务的端口。不同service可以使用相同export端口，前提条件为协议与序列化等配置必须相同。

#  httptest-zha: #clientid，创建client时使用，与client端配置对应
#    path: com.weibo.motan.demo.service.HttpService
#    registry: "direct-registry"
#    provider: http #使用provider在此注册
#    HTTP_REQUEST_METHOD: GET
#    requestTimeout: 2000
#    basicRefer: mybasicRefer
#    export: "motan2:8104" #对外提供服务的端口。不同service可以使用相同export端口，前提条件为协议与序列化等配置必须相同。

#配置motanProvider service
reverse-proxy-service:
  motantest-zha0:
    host: 127.0.0.1
    port: 8105
    serialization: simple
  motantest-zha1:
    host: 127.0.0.1
    port: 8106
    serialization: simple

#配置httpprovider service
http-service:
  httptest-zha:
    http_default_motan_method:
      URL_FORMAT: http://127.0.0.1:8105